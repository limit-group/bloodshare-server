// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  FACILITYUSER
  FACILITYADMIN
  SUPERADMIN
}

enum BloodType {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  AB_NEGATIVE
  AB_POSITIVE
  O_POSITIVE
  O_NEGATIVE
}

model User {
  id        Int          @id @default(autoincrement())
  email     String?      @unique
  password  String
  phone     String?      @unique
  otp       String
  verified  Boolean      @default(false)
  role      Role         @default(USER)
  profile   UserProfile?
  donations Donation[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Facility {
  id                          Int                          @id @default(autoincrement())
  name                        String                       @db.VarChar(255)
  verified                    Boolean                      @default(false)
  mission                     String
  email                       String?
  streetName                  String
  streetNumber                String
  city                        String
  country                     String
  license                     String?
  licenseNumber               String                       @unique
  donation                    Donation[]
  donationBroadcasts          DonationBroadCast[]
  emergencydonationBroadcasts EmergencyDonationBroadCast[]
  createdAt                   DateTime                     @default(now())
  updatedAt                   DateTime                     @updatedAt
}

model UserProfile {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       Int       @unique
  name         String
  avatar      String?
  dateOfBirth  String
  bloodType    BloodType
  streetName   String?
  streetNumber String?
  city         String?
  country      String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Donation {
  id         Int      @id @default(autoincrement())
  donor      User     @relation(fields: [donorId], references: [id])
  donorId    Int      @unique
  facility   Facility @relation(fields: [facilityId], references: [id])
  facilityId Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model DonationBroadCast {
  id          Int      @id @default(autoincrement())
  Facility    Facility @relation(fields: [facilityId], references: [id])
  facilityId  Int
  when        DateTime
  venue       String
  description String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model EmergencyDonationBroadCast {
  id          Int       @id @default(autoincrement())
  Facility    Facility  @relation(fields: [facilityId], references: [id])
  facilityId  Int
  description String    @db.VarChar(255)
  bloodType   BloodType
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
